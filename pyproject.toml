[tool.poetry]
authors = [
  "Ismael Mendoza <imendoza@umich.edu>",
  "Somwya Kamath",
  "Thomas Sainrat",
  "Maxime Paillasa",
  "Alexandre Boucaud",
  "Remy Joseph",
  "Patricia Burchat",
  "Cyrille Doux",
  "Eric Aubourg",
]
classifiers = [
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
description = "Blending ToolKit"
keywords = ["cosmology", "galaxies", "blending", "lsst", "simulation"]
license = "MIT"
name = "blending_toolkit"
readme = "README.md"
version = "1.0.0b8"
packages = [{ include = "btk" }]
repository = "https://github.com/LSSTDESC/BlendingToolKit"
homepage = "https://lsstdesc.org/BlendingToolKit/index.html"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/LSSTDESC/BlendingToolKit/issues"

[tool.poetry.dependencies]
numpy = ">=1.22"
astropy = ">=5.1"
galcheat = "^1.0.0"
matplotlib = ">=3.7.1"
scikit-image = ">=0.20.0"
scipy = ">=1.9.1"
tqdm = ">=4.65.0"
sep = ">=1.2.1"
galsim = ">=2.4.9"
python = "^3.8.1,<3.12"
h5py = "^3.9.0"
fast3tree = "^0.4.1"

[tool.poetry.group.scarlet]
optional = true

[tool.poetry.group.scarlet.dependencies]
peigen = "^0.0.9"
autograd = "^1.5"
proxmin = "^0.6.12"
pybind11 = "^2.10.3"

[tool.poetry.group.dev.dependencies]
pytest-cov = "^5.0.0"
pre-commit = "^3.3.3"
jupyter = ">=1.0.0"
jupyter-sphinx = ">=0.4.0"
nbmake = ">=1.4.1"
nbstripout = ">=0.6.1"
pytest = ">=7.3.1"
sphinx = ">=4.2.0"
sphinx-rtd-theme = ">=1.2.1"
ruff = "^0.3.2"


[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1.0.0",
  "setuptools",
  "numpy",
  "cython",
  "pybind11>=2.6.0",
  "wheel",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pyenv",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  ".vscode",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "site-packages",
  "venv",
]

# Copying over black configuration
line-length = 100
indent-width = 4

# Assume Python 3.10
target-version = "py310"

[tool.ruff.lint]
# Enable the following rules:
# Pyflakes (`F`)
# Pycodestyle (`E`)
# Pycodestyle warnings (`W`)
# isort (`I`)
# pydocstyle (`D`)
# ruff specific errors (`RUF`)
# simplifying flake8 (`SIM`)
# return refactoring (`RET`)
select = ["E", "F", "W", "I", "D", "PL", "RUF", "SIM", "RET"]

# ignore
# PLR2004: Magic value comparison is OK most of the time.
# PLR0913: "Too many arguments in function definition", we should fix some of these eventually.
# SIM118: Too many places where we use `k in table.keys()`, and table is not a dict.
ignore = ["PLR2004", "PLR0913", "SIM118"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"


[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "I", "F"]
"**/{tests,docs,tools}/*" = ["E402", "D", "PLR0915"]
"**/*.ipynb" = ["I"]

[tool.ruff.lint.pydocstyle]
convention="google"

[tool.pytest.ini_options]
addopts = "-ra"
minversion = "6.0"
testpaths = ["tests"]
